# gitconfig
[user]
  name = Lomig Enfroy
  email = lomig@hey.com
[credential]
	helper = osxkeychain
[github]
  user = Lomig
[init]
  templatedir = ~/.dotfiles/git/templates
[core]
  excludesfile = ~/.dotfiles/git/gitignore_global
  editor = vim
[pager]
  diff = "diff-so-fancy | less --tabs=4 -RFX"
  show = "diff-so-fancy | less --tabs=4 -RFX"

# Colors
[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
  ui = auto
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighligh = green bold 52
[color "branch"]
  current = green bold
  local = green
  remote = red bold
[color "diff"]
  meta = 11
  frag = magenta bold
  commit = yellow bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = green bold
  changed = yellow bold
  untracked = red
[color "sh"]
  branch = yellow

[alias]
  # List all aliases
  la = "!git config -l | grep alias | cut -c 7-"

  # Clean merged branches
  sweep = !git branch --merged master | grep -v 'master$' | xargs git branch -d && git remote prune origin

  # Fancy logs
  # http://www.jukie.net/bart/blog/pimping-out-git-log
  lg = log --graph --all --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)%an%Creset %C(yellow)%d%Creset'

  # Serve local repo
  # http://coderwall.com/p/eybtga
  # Then other can access via `git clone git://#{YOUR_IP_ADDRESS}/
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git

  # Shortcuts
  co = checkout
  cob = checkout -b
  st = status -sb
  ss  = status
  br = branch
  ci = commit
  fo = fetch origin

  # Unstage a file
  unstage = reset HEAD --

  # Rebase
  continue = rebase --continue

  # Show the committers in the last 100 commits
  # Sorted by number of commits
  review = "!git log --no-merges --pretty=%an | head -n 100 | sort | uniq -c | sort -nr"

  # Submodule shortcuts
  si = submodule init
  su = submodule update
  sub = "!git submodule sync && git submodule update"

  # Remove last commit from branch
  undo = reset --soft HEAD~1

  # Change last commit
  amend = commit -a --amend

  # Rebase the current branch with changes from upstream remote
  update = !git fetch upstream && git rebase upstream/`git rev-parse --abbrev-ref HEAD`

[push]
  default = current

[branch "master"]
  mergeoptions = --no-edit

[pull]
  rebase = false

[diff]
  renames = copies
  mnemonicprefix = true
  compactionHeuristic = true
  tool = nvim
  conflictstyle = diff3
  prompt = false

[mergetool "nvim"]
  cmd = vim -f -c 'Gdiffsplit!' "$MERGED"

[merge]
  tool = nvim
  conflictstyle = diff3
  prompt = false

[grep]
  extendRegexp = true
  lineNumber = true

[rebase]
	instructionFormat = "[%an - %ar] %s"
	autoStash = true

